@page "/todo"
<h3>@HeaderName</h3>
<!-- Edit Form -->
<EditForm Model="task" class="form-check-inline" OnInvalidSubmit="AddTask">
    <div class="mb-3">
        <input class="form-control mx-2" type="text" @bind-value="task.Description" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary mx-2" @onclick="AddTask">Add Task</button>
    </div>


</EditForm>


<div class="progress-bar my-2 mx-2" role="progressbar" style="width:@(PercentageCompleted)%" aria-valuemax="100" aria-valuemin="0">
    @(PercentageCompleted)%
</div>


<ul class="list-group my-2">
    @foreach (var item in taskList.Result)
    {
        if (item.IsComplete)
        {
            <!--Task Completed-->
            <li class="list-group-item-success mx-1" @onclick="(() => item.IsComplete = !item.IsComplete)"><del>@item.Description</del></li>
        }
        else
        {
            <!--Task Not Completed-->
            <li class="list-group-item-secondary mx-1" @onclick="(() => item.IsComplete = !item.IsComplete)">@item.Description</li>
        }
    }
</ul>

@code {
    protected Task<List<ToDoTask>> taskList = Task.FromResult(new List<ToDoTask>());
    protected ToDoTask task = new ToDoTask();

    protected override void OnInitialized()
    {
        if (HeaderName == "")
        {
            HeaderName = "Daily Task";
            //<h3>@HeaderName</h3>
        }
    }

    [Parameter]
    public string? HeaderName { get; set; }

    private void AddTask()
    {
        taskList.Result.Add(task);
        task = new ToDoTask();
    }

    public int PercentageCompleted
    {
        get
        {
            return taskList.Result.Count > 0 ? (taskList.Result.Count(x => x.IsComplete) * 100 / taskList.Result.Count) : 0;
        }
    }
}
